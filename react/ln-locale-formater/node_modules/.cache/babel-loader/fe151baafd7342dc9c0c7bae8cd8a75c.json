{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';import reportWebVitals from'./reportWebVitals';import{jsx as _jsx}from\"react/jsx-runtime\";var root=ReactDOM.createRoot(document.querySelector('ln-locale-formatter'));console.log(root);var data=root._internalRoot.containerInfo.dataset;function render(){root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{number:data.number,locale:data.locale,style:data.style,currency:data.currency})}));}var observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){if(mutation.type==\"attributes\"){render();}});});observer.observe(document.querySelector('ln-locale-formatter'),{attributes:true//configure it to listen to attribute changes\n});render();// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","root","createRoot","document","querySelector","console","log","data","_internalRoot","containerInfo","dataset","render","number","locale","style","currency","observer","MutationObserver","mutations","forEach","mutation","type","observe","attributes"],"sources":["/home/stefanijagjurkovska/Desktop/projects/proba/total/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.querySelector('ln-locale-formatter'));\n\nconsole.log(root);\nconst data = root._internalRoot.containerInfo.dataset;\n\nfunction render() {\n  root.render(\n    <React.StrictMode>\n      <App\n        number={data.number}\n        locale={data.locale}\n        style={data.style}\n        currency={data.currency}     \n      />\n    </React.StrictMode>\n  );\n  \n}\n\n\nvar observer = new MutationObserver(function(mutations) {\n  mutations.forEach(function(mutation) {\n    if (mutation.type == \"attributes\") {\n      render();\n    }\n  });\n});\n\nobserver.observe(document.querySelector('ln-locale-formatter'), {\n  attributes: true //configure it to listen to attribute changes\n});\nrender();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,SAAP,KAAqB,kBAArB,CACA,MAAO,aAAP,CACA,MAAOC,IAAP,KAAgB,OAAhB,CACA,MAAOC,gBAAP,KAA4B,mBAA5B,C,2CAEA,GAAMC,KAAI,CAAGH,QAAQ,CAACI,UAAT,CAAoBC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAApB,CAAb,CAEAC,OAAO,CAACC,GAAR,CAAYL,IAAZ,EACA,GAAMM,KAAI,CAAGN,IAAI,CAACO,aAAL,CAAmBC,aAAnB,CAAiCC,OAA9C,CAEA,QAASC,OAAT,EAAkB,CAChBV,IAAI,CAACU,MAAL,cACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,GAAD,EACE,MAAM,CAAEJ,IAAI,CAACK,MADf,CAEE,MAAM,CAAEL,IAAI,CAACM,MAFf,CAGE,KAAK,CAAEN,IAAI,CAACO,KAHd,CAIE,QAAQ,CAAEP,IAAI,CAACQ,QAJjB,EADF,EADF,EAWD,CAGD,GAAIC,SAAQ,CAAG,GAAIC,iBAAJ,CAAqB,SAASC,SAAT,CAAoB,CACtDA,SAAS,CAACC,OAAV,CAAkB,SAASC,QAAT,CAAmB,CACnC,GAAIA,QAAQ,CAACC,IAAT,EAAiB,YAArB,CAAmC,CACjCV,MAAM,GACP,CACF,CAJD,EAKD,CANc,CAAf,CAQAK,QAAQ,CAACM,OAAT,CAAiBnB,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,CAAjB,CAAgE,CAC9DmB,UAAU,CAAE,IAAK;AAD6C,CAAhE,EAGAZ,MAAM,GAEN;AACA;AACA;AACAX,eAAe"},"metadata":{},"sourceType":"module"}