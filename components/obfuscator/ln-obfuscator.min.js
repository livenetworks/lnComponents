!function () { const n = "ln-obfuscator", t = "lnObfuscator"; function o(o) { let r = Array.from(o.querySelectorAll("[" + n + "]")) || []; o.hasAttribute(n) && r.push(o), r.forEach(function (n) { n[t] || (n[t] = new i(n)) }) } function i(t) { return this.dom = t, function () { let t = function () { return Number(this.dom.getAttribute(n)) }.call(this); this.dom.innerHTML = function (n, t) { let o = ""; return o = r(n = (26 - n) % 26, t) }(t, this.dom.innerHTML) }.call(this), this } function r(n, t) { return t.replace(/[a-zA-Z]/g, function (t) { return String.fromCharCode((t <= "Z" ? 90 : 122) >= (t = t.charCodeAt(0) + n) ? t : t - 26) }) } null == window[t] && null == window[t] && (new MutationObserver(function (n) { n.forEach(function (n) { "childList" == n.type && n.addedNodes.forEach(function (n) { o(n) }) }) }).observe(document.body, { childList: !0 }), window[t] = function (n) { o(n) }, window[t].obfuscate = r) }(), window.lnObfuscator(document.body);