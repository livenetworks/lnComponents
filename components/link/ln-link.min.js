!function () { const n = "ln-link", o = "lnLink"; function t(t) { let c = Array.from(t.querySelectorAll("[" + n + "]")) || []; t.hasAttribute(n) && c.push(t), c.forEach(function (n) { n[o] || (n[o] = new i(n)) }) } function i(n) { return this.dom = n, function () { let n = this.dom.querySelector("a"); this.dom.addEventListener("click", () => { n.click() }) }.call(this), this } null == window[o] && null == window[o] && (new MutationObserver(function (n) { n.forEach(function (n) { "childList" == n.type && n.addedNodes.forEach(function (n) { t(n) }) }) }).observe(document.body, { childList: !0 }), window[o] = function (n) { t(n) }) }(), window.lnLink(document.body);